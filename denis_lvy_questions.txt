1. what is Django?
Django is a backend python based frame work.

2. what can you build with Django?
dropbox,instagram uses Django. It is capable of building anything

3.Difference between a Project and App?
Project is overall environment(our website) and App is a componet of  the environment(website)
A project contains many apps and apps contains logics of the project
Instagram is my Project  post,stories etc are different apps

4.How do we initialize a project?
django-admin startproject project_name

5.How do we initialize a app?
python manage.py startapp app_name

6.How do u run a development server?
python manage.py runserver

7.What does the settings.py file do?
settings.py is our overall project configuration
it is used for
database connection
configurating our apps
overall command center

8.what are models?
Models are class based representation of database tables and they represent database structures

9. what are views?
views contains buisness logic and with is triggered and responsed back

10. what are templates?
return htmls

11. what are url patterns?
helps in routing through out the website
when a particular url is entering what business logic and wt html page to render

12. what is the Django Admin Panel?
comes built in with django
user interface provided by django to see and change the contents of the database
to check the users logged in

13. what do the following commands do?
python manage.py makemigrations # prepares database for changes
python manage.py migrate# apply those changes

14. FBV vs CBV

15. what database system do you prefer?
MYSQL
postgres
sqlite3

16. How do you set up a database connection?
in settings.py
there is a database variable which is a dictionary
there we can update and modify our database connection

17. why do we add names to URL's & how do we access them dynamically?
path('posts/',views.posts,name='posts')
<a href="{% url 'posts' %}" ></a>

18. Where do we store templates?
projects--> templates--> app_name ---> htmlpages
or else change in settings.py templates variable

19. what is {{}} mean?
in html/templates these are placeholders for variables

20.what is {%%} mean?
these are just codeblocks where we write python like logics

21. how do we include templates?
{% include 'base/nabar.html' %}

{% extends 'base/navbar.html' %}
supppose we have parent html where we have added block content

if we want to include something in this block content
we will extend our base template


22.what are static files?
this is where we store our css js html images and kind of static files

23. Serving static files during development?
in settings.py
staticfiles_dir = [
	os.path.join(BASE_DIR,'static')
] 
# letting django where static files lies inside our project


24. what is MEDIA_ROOT?
this is used by django to know where the user uploaded contents are stored.

25. what is MEDIA_URL?
this is used by browser/website to find images.

26. common model attributes?

foreign key -- used to set one to one field and one to many field
textField
imageField
charField
slugField


27. how do you query all objects?
model_name.objects.all()
model_name.objects.get(name="sunil")//gives one object
model_name.objects.filter(name="sunil")//gives all objects which satisfies the given condition


28. what are CSRF tokens?
when we use forms and send request to the server like post and get to protect our data we use csrf tokens

29. what are model forms?


30. what is django-rest-framework DRF?
THis is used to build APIs and when we use other frameworks like react js,angular js for frontend  and integrate frontend framework and django using this DRF

31. How do we include restrictions on views?
using decorators

ex @login_required

32. what are Model Serializers?

ORM(object relational mapping)

data and application
if we want to create table or insert data into table  in our database we should write sql query
instead we can write class which describes the schema of the table and we can create objects of this class to create tuples of that table
this is done by ORM which converts our class to tables and our objects to tuples


MVT(model View Template)
								Model----> data		
							  /  	
							  /
user--->django--->url-->views
							\
							 \
							  Template






	
